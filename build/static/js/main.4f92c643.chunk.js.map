{"version":3,"sources":["components/Name.js","services/names.js","App.js","index.js"],"names":["Name","name","style","width","amount","axios","get","then","response","data","App","useState","initialOrder","setInitialOrder","names","setNames","findName","setFindName","useEffect","nameService","initialNames","compare","a","b","nameA","toUpperCase","nameB","comparison","nameToShow","filter","n","toLowerCase","includes","onClick","sortedbyAmount","sort","sortedbyName","value","onChange","e","target","placeholder","map","i","reduce","previous","current","ReactDOM","render","document","getElementById"],"mappings":"oLAeeA,EAbF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZ,OACI,gCACI,gCACI,+BACI,oBAAIC,MAAO,CAACC,MAAO,QAAnB,SAA6BF,EAAKA,OAClC,6BAAKA,EAAKG,iB,iBCDf,EAJA,WAEX,OADgBC,IAAMC,IAHV,mCAIGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC2E9BC,EA5EH,WAAO,IAAD,EACwBC,mBAAS,IADjC,mBACTC,EADS,KACKC,EADL,OAEUF,mBAAS,IAFnB,mBAETG,EAFS,KAEFC,EAFE,OAGgBJ,mBAAS,IAHzB,mBAGTK,EAHS,KAGCC,EAHD,KAKhBC,qBAAU,WACRC,IAEGZ,MAAK,SAAAa,GACJL,EAASK,GACTP,EAAgBO,QAEnB,IAgBH,SAASC,EAAQC,EAAGC,GAClB,IAAMC,EAAQF,EAAErB,KAAKwB,cACfC,EAAQH,EAAEtB,KAAKwB,cAEjBE,EAAa,EAMjB,OALIH,EAAQE,EACVC,EAAa,EACJH,EAAQE,IACjBC,GAAc,GAETA,EAGT,IASMC,EAA0B,KAAbZ,EACfF,EACAA,EAAMe,QAAO,SAAAC,GAAC,OAAIA,EAAE7B,KAAK8B,cAAcC,SAAShB,EAASe,kBAG7D,OACE,gCACE,uCACA,wBAAQE,QA5CY,WACtB,IAAMC,EAAc,YAAOpB,GAC3BoB,EAAeC,MAAK,SAACb,EAAGC,GAAJ,OAAUA,EAAEnB,OAASkB,EAAElB,UAE3CW,EAASmB,IAwCP,4BACA,wBAAQD,QAtCoB,WAC9B,IAAMG,EAAY,YAAOtB,GACzBsB,EAAaD,KAAKd,GAElBN,EAASqB,IAkCP,0BACA,wBAAQH,QAnBkB,WAC5BlB,EAASH,GACTK,EAAY,KAiBV,+BACA,gFACA,uBACEoB,MAAOrB,EACPsB,SAlBiB,SAACC,GACtBtB,EAAYsB,EAAEC,OAAOH,QAkBjBI,YAAY,cAEbb,EAAWc,KAAI,SAACzC,EAAM0C,GAAP,OACd,cAAC,EAAD,CAAc1C,KAAMA,GAAT0C,MAEb,kEAAqC7B,EAAM8B,QAAO,SAACC,EAAUC,GAAX,OAAuBD,EAAWC,EAAQ1C,SAAQ,UCrE1G2C,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.4f92c643.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Name = ({ name }) => {\r\n    return (\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td style={{width: '60px'}}>{name.name}</td>\r\n                    <td>{name.amount}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Name","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/names'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\nexport default { getAll }","import React, { useEffect, useState } from 'react'\nimport Name from './components/Name'\nimport nameService from './services/names'\n\nconst App = () => {\n  const [initialOrder, setInitialOrder] = useState([])\n  const [names, setNames] = useState([])\n  const [findName, setFindName] = useState('')\n\n  useEffect(() => {\n    nameService\n      .getAll()\n      .then(initialNames => {\n        setNames(initialNames)\n        setInitialOrder(initialNames)\n      })\n  }, [])\n\n  const handleSortClick = () => {\n    const sortedbyAmount = [...names]\n    sortedbyAmount.sort((a, b) => b.amount - a.amount)\n    //console.log(sortedNames)\n    setNames(sortedbyAmount)\n  }\n\n  const handleAlphabeticalClick = () => {\n    const sortedbyName = [...names]\n    sortedbyName.sort(compare)\n    //console.log(sortedbyName)\n    setNames(sortedbyName)\n  }\n\n  function compare(a, b) {\n    const nameA = a.name.toUpperCase()\n    const nameB = b.name.toUpperCase()\n\n    let comparison = 0\n    if (nameA > nameB) {\n      comparison = 1\n    } else if (nameA < nameB) {\n      comparison = -1\n    }\n    return comparison\n  }\n\n  const handleClearAllFilters = () => {\n    setNames(initialOrder)\n    setFindName('')\n  }\n\n  const handleFindName = (e) => {\n    setFindName(e.target.value)\n  }\n\n  const nameToShow = findName === ''\n    ? names\n    : names.filter(n => n.name.toLowerCase().includes(findName.toLowerCase()))\n  //console.log('name', nameToShow)\n\n  return (\n    <div>\n      <h1>Names</h1>\n      <button onClick={handleSortClick}>Sort by amount</button>\n      <button onClick={handleAlphabeticalClick}>Sort by name</button>\n      <button onClick={handleClearAllFilters}>Clear all filters</button>\n      <p>See amount of specific name by typing it below:</p>\n      <input\n        value={findName}\n        onChange={handleFindName}\n        placeholder='Type here'\n      />\n      {nameToShow.map((name, i) =>\n        <Name key={i} name={name} />\n      )}\n      <p>Total amount of all the names is {names.reduce((previous, current) => previous + current.amount, 0)}</p>\n\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,  document.getElementById('root'));"],"sourceRoot":""}